version: '3.7'

services:
  elasticsearch:
    image: ${IMAGE_ES}
    hostname: elasticsearch
    restart: always
    tty: true
    stdin_open: true
    privileged: true
    ports:
      - ${ES_PORT:-9200}:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=$ES_PASSWORD
      - xpack.security.enabled=$ES_SECURITY
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '5s'
        fluentd-max-retries: '130'
        tag: efk.elasticsearch

  kibana:
    image: ${IMAGE_KIBANA}
    networks:
      - net
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=$ES_PASSWORD
    depends_on:
      - elasticsearch
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: efk.kibana

  nginx:
    image: ${IMAGE_NGINX}
    restart: always
    ports:
      - ${NGINX_EXT_PORT:-8080}:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
    networks:
      - net
    depends_on:
      - kibana
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: efk.nginx

  fluentd:
    build: ./fluentd
    ports:
      - ${FL_PORT:-24224}:24224
      - ${FL_PORT:-24224}:24224/udp
    volumes:
      - ./fluentd/etc:/fluentd/etc
    networks:
      - net
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
        max-file: "2"
        tag: efk.fluentd

  elastalert:
    image: ${IMAGE_ELASTALERT}
    restart: always
    networks:
      - net
    depends_on:
      - elasticsearch
    volumes:
      - ./elastalert/config.yaml:/opt/config/elastalert_config.yaml
      - ./elastalert/config.json:/opt/config/config.dev.json
      - ./elastalert/rules:/opt/elastalert/rules
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: efk.elastalert

networks:
  net:
    driver: bridge

volumes:
  es-data: {}